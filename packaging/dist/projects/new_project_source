#!/bin/bash
# This file is protected by Copyright. Please refer to the COPYRIGHT file
# distributed with this source distribution.
#
# This file is part of OpenCPI <http://www.opencpi.org>
#
# OpenCPI is free software: you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# OpenCPI is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

if [ $# -lt 2 ]; then
  echo "This script will install a copy of a specified OpenCPI project in a desired directory."
  echo "Usage: $0 <project name> <target directory>"
  echo "Example: $0 base ~/ocpi_baseproj"
  echo ""
  exit 99
fi

PRJ_NAME=$1
TARGET_DIR=$2
MY_DIR=$(dirname $0)

if [ ! -d "${MY_DIR}/${PRJ_NAME}" ]; then # AV-3566
  echo "${MY_DIR}/${PRJ_NAME} does not exist!"
  echo "Valid projects are: "
  find ${MY_DIR} -maxdepth 1  -mindepth 1 -type d | xargs -n1 basename
  exit 97
fi
if [ -z "${TARGET_DIR}" ]; then
  echo "${TARGET_DIR} is blank"
  exit 98
fi
if [ -e "${TARGET_DIR}" ]; then
  echo "${TARGET_DIR} already exists!"
  exit 99
fi

# Prepend ./ if no path given (AV-741)
[ 0 -eq "$(echo ${TARGET_DIR} | grep -c /)" ] && TARGET_DIR=./${TARGET_DIR}

set -e
echo Extracting into "${TARGET_DIR}"
mkdir ${TARGET_DIR}
# Allow the files to just be in a tarball or files in the directory
[ -f ${MY_DIR}/${PRJ_NAME}/opencpi-${PRJ_NAME}-*.tar.xz ] && \
tar -C "${TARGET_DIR}" -xf ${MY_DIR}/${PRJ_NAME}/opencpi-${PRJ_NAME}-*.tar.xz
cp -r ${MY_DIR}/${PRJ_NAME}/. ${TARGET_DIR}
rm -f ${TARGET_DIR}/*.tar.xz
cd "${TARGET_DIR}"

if [ $PRJ_NAME == "core" ]; then
  set +e
  ocpidev -f unregister project ocpi.core
  if [ $? == 0 ]; then
    echo "Project with Package-ID 'ocpi.core' already exists in the project" \
         "registry. Unregistering it now so the new copy can be registered."
  else
    echo "Proceeding without unregistering project..."
  fi
  echo ""
  set -e
fi
ocpidev register project || \
  echo "Proceeding without registering project..."

make imports > /dev/null 2>&1
make exports > /dev/null 2>&1
ls -halF
