<build>
  <!-- Because the data property has a parameterized ArrayLength,
  AV-3096 blocks multiple configurations from building.
  -->
  <configuration id='0'>
    <parameter name='numRecords' value='256'/>
    <parameter name='numDataWords' value='1024'/>
  </configuration>

  <!--
  This configuration will use up 94.29% (132 out 140 36Kb Blocks) of the Block RAM on the Zynq-7020

  Since the raw property address (props_in.raw.address) is currently 16 bits wide and data and metadata are raw properties that contain 4 byte words,
  the total address space for these properties is (2^16)/4. The framework does not throw an error when the total number of elements between the
  two array properties exceeds (2^16)/4 so the properties will not be filled correctly. This failure is run time and the application will successfully
  execute. Therefore the final property values for this configuration will not be correct because the total number elements between the 2 properties
  is 100048 which exceeds (2^16)/4. Once AV-4254, another blocker for this configuration, is addressed to change the raw.address from 16 to 32, the new
  address space limit will be (2^32)/4 and the final property values will be correct.
  <configuration id='1'>
    <parameter name='numRecords' value='512'/>
    <parameter name='numDataWords' value='98000'/>
  </configuration>
  -->
</build>
