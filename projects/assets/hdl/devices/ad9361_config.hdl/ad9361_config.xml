<!-- ad9361_config.hdl is a device worker containing all functionality necessary
     for AD9361 hardware configuration (register access and pin control). -->
<HdlDevice language="vhdl" FirstRawproperty='general_spi_conf'>
  <ControlInterface Timeout="1024"/>
  <ComponentSpec>
    <!-- Properties -->
    <!-- Note this is not volatile since it is determined in the container -->
    <property name='other_present'          type='bool' readable='1'/>

    <property name='force_reset'            type='bool' writable='1' readable='1' default='0' description='Forces reset pin low (active low). Reset pin is otherwise the same level as the OpenCPI control plane reset signal.'/>
    <!--property name='adc_mode' type='enum' enums='cmos_singleport_halfduplex_sdr,cmos_singleport_halfduplex_ddr,cmos_singleport_fullduplex_sdr,cmos_singleport_fullduplex_ddr,cmos_dualport_halfduplex,cmos_dualport_fullduplex,lvds_dualport_fullduplex,invalid' volatile='1'/-->
    <!--property name='one_t_timing_is_supported' type='bool' volatile='1'/-->
    <property name='qadc0_is_present'       type='bool' volatile='1' description='Inidicates whether or not bitstream was built with qadc0, which supports first RX channel'/>
    <property name='qadc1_is_present'       type='bool' volatile='1' description='Inidicates whether or not bitstream was built with qadc1, which supports second RX channel'/>
    <property name='qdac0_is_present'       type='bool' volatile='1' description='Inidicates whether or not bitstream was built with qdac0, which supports first TX channel'/>
    <property name='qdac1_is_present'       type='bool' volatile='1' description='Inidicates whether or not bitstream was built with qdac1, which supports second TX channel'/>
    <property name='rx_frame_usage'         type='enum' enums='enable,toggle' volatile='1' description='enable : Register 0x010 bit D3 is 0, meaning Rx frame goes high coincident with the first valid receive sample. It stays high., toggle: Register 0x010 bit D3 is 1, meaning the Rx frame signal toggles with a duty cycle of 50%.'/>
    <property name='data_bus_index_direction' type='enum' enums='normal,reverse' volatile='1' description="normal : Register 0x010 bit D1 is 0, meaning each RX sample's bit index direction is normal, i.e. [11:0], reverse: Register 0x010 bit D1 is 1, meaning each RX sample's bit direction is inverted, i.e. [0:11]."/>
    <property name='data_clk_is_inverted'   type='bool' volatile='1' description="false : Register 0x010 bit D0 is 0, meaning that the DATA_CLK follows the DATA_CLK_P signal in the UG570 timing diagrams, true : Register 0x010 bit D0 is 1, meaning that the DATA_CLK follows the DATA_CLK_N signal in the UG570 timing diagrams"/>
    <property name='rx_frame_is_inverted'   type='bool' volatile='1' description="false : Register 0x011 bit D2 is 0, meaning that the RX_FRAME follows the RX_FRAME_P signal in the UG570 timing diagrams, true : Register 0x011 bit D2 is 1, meaning that the RX_FRAME follows the RX_FRAME_N signal in the UG570 timing diagrams"/>
    <property name='p0_p1_are_swapped'      type='bool' volatile='1' description="false : Register 0x012 bit D6 is 0, meaning that the P0 and P1 follow the descriptions given in the UG570, true : Register 0x012 bit D6 is 1, meaning that P0 and P1 roles are reversed in comparison to the UG570 description."/>
    <property name='iostandard'             type='enum' enums='CMOS,LVDS'   volatile='1'/>
    <property name='port_config'            type='enum' enums='single,dual' volatile='1'/>
    <property name='duplex_config'          type='enum' enums='half_duplex,full_duplex,runtime_dynamic' volatile='1'/>
    <property name='data_rate_config'       type='enum' enums='SDR,DDR'     volatile='1'/>
    <property name='data_configs_are_valid' type='bool' volatile='1'/>
    <property name='config_is_two_r'        type='bool' readable='1' writable='1' description="Used to tell the ad9361_adc_sub and ad9361_dac_sub workers what data paths are enabled. Note that, just because a qadc or qdac worker is present in the bitstream, that doesn't mean it is enabled."/>
    <property name='config_is_two_t'        type='bool' readable='1' writable='1' description="Used to tell the ad9361_dac_sub worker what data paths are enabled. Note that, just because a qdac worker is present in the bitstream, that doesn't mean it is enabled."/>
    <property name='force_two_r_two_t_timing' type='bool' readable='1' writable='1' description="Used to force the ad9361_dac_sub worker to use the 2R2T timing diagram regardless of what TX channels are enabled. This property is expected to correspond to the D2 bit of the Parallel Port Configuration 1 register at SPI address 0x010."/>

    <!-- Here are the raw properties that are in registers -->
    <xi:include href='ad9361-properties'/>
  </ComponentSpec>

  <!-- Raw Property Ports -->
  <rawprop name='rawprops' master='true'/>

  <!-- Dev Signal Ports -->
  <devsignal name='dev_force_spi_reset' signals='force-reset-out-signals.xml'      master='true'/>
  <devsignal name='dev_cfg_data_port'   signals='ad9361-cfg-data-port-signals.xml' master='true'/>
  <devsignal name='dev_cfg_data' count='2' optional='true' signals='ad9361-cfg-data-signals.xml'/>
  <devsignal name='dev_cfg_data_rx'        optional='true' signals='ad9361-cfg-data-rx-signals.xml'/>
  <devsignal name='dev_cfg_data_tx'        optional='true' signals='ad9361-cfg-data-tx-signals.xml'/>

  <!-- Sub-Device Port Connections (Supports) -->
  <supports worker='ad9361_adc_sub'>
    <connect port="dev_cfg_data"    to="dev_cfg_data" index='0'/>
    <connect port="dev_cfg_data_rx" to="dev_cfg_data_rx"/>
  </supports>

  <supports worker='ad9361_dac_sub'>
    <connect port="dev_cfg_data"    to="dev_cfg_data" index='1'/>
    <connect port="dev_cfg_data_tx" to="dev_cfg_data_tx"/>
  </supports>
</HdlDevice>
