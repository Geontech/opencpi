Migration of software platforms from 1.3 to 1.4

Prior to 1.4, software platforms were defined in projects/core/rcc/platforms.
With 1.4, they can be in the rcc/platforms directory of any project.
The Platform Development Guide defines how software platforms are defined in 1.4.

Here is a list of the files used to define a software platform in 1.3 and how they have changed in 1.4.
In 1.3, there were three platforms defined: centos7, centos6, and xilinx13_3.
We will use ppp as the name of the software platform.

1.3 files and how they are rendered in 1.4
==========================================

ppp-check.sh

This file was and is only necessary for development hosts/platforms, not cross-compiled platforms.
It returns failure (exit 1) if the currently running system is not this one.
In 1.3, this script returned the "triple" of OS OS_VERSION and ARCH on stdout, e.g. linux-c6-x86_64 for centos6.
In 1.4, it is simpler and has no output, but just exits with 0 (yes this is the running platform) or 1 (no it isn't).

ppp-env.sh

This file is no longer needed at all. It was already obsolete but present in 1.3.

ppp-packages.sh

This file was and is unnecessary for cross-built non-development platforms.
In 1.3 this script directly performed "yum install" on all required packages, and used groupinstall (not very selective).
In 1.4, this script is more disciplined and has three modes indicated by the first argument:
With no argument, it performs the function as in 1.3, installing required packages.
With the "list" argument, it puts out the names of required packages on 4 lines:
1. The packages necessary for runtime packages/RPMs
2. The packages necessary for development packages/RPMs
3. The packages necessary for an OpenCPI source environment (e.g. for building the framework)
4. The packages that are for development, but which must be installed in a second phase after those on the second line.
These "list" packages are package names suitable for RPM creation.
With the "yumlist" option, the packages are the same but suitable for "yum install".

ppp-target.mk

In 1.3 this file was undisciplined and set various variables for compilation on this platform.
In 1.4 it is renamed ppp.mk, and is must more disciplined and well-defined.
In 1.4 the defaults are what is appropriate for centos6.
To transition, follow the definitions in the platform development document, using the settings in
a 1.3 ppp-target.mk file as input.

ppp-target.sh

Like ppp-env.sh, this file was obsolete in 1.3, and is unnecessary in 1.4.

target (the file whose name is "target")

This 1.3 file is unnecessary in 1.4
Its contents are captured in the new ppp.mk file.

New RCC platform files in 1.4 that were not in 1.3
==================================================

In 1.4, there is a new file: ppp.exports

In a source distribution, the top level "Project.exports" file always specified which framework files
should be "exported" and become part of the installed CDK.
Prior to 1.4, the lines starting with + indicated files and/or directories to export.
With 1.4, files starting with + are files to export for a development package, whereas lines starting
with = are files to export for a runtime package. Thus the runtime files are a subset of what you
might see in a development environment since development systems depend on the runtime files.

The new file ppp.exports allows a software platform to "add and subtract" from the standard framework exports.
The + and = lines have the same meaning as in the (1.4) Project.exports
See the platform development guide for more details about this file.

Also, in 1.4, the ppp.mk file can define additional platform-specific prerequisites for a platform, such as a cross compiler.
If the ppp.mk file does specify such prerequisites (say "preq"), then there must be an installation script
called install-preq.sh, which follows the rules for prerequisite installation scripts as documented.
